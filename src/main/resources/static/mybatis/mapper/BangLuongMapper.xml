<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fpt.vanguard.mapper.mybatis.BangLuongMapper">
    <insert id="insertBangLuongNhanVien">
        INSERT INTO bang_luong(
            ma_bang_luong,
            ma_nhan_vien,
            thang,
            nam
        ) VALUES (
            generate_ma_bang_luong(#{thang}, #{nam}),
            #{maNhanVien},
            #{thang},
            #{nam}
        )
    </insert>

    <update id="updateBangLuongNhanVien">
        UPDATE bang_luong
        SET
            tong_phu_cap = #{tongPhuCap},
            tong_khau_tru = #{tongKhauTru},
            tong_luong = #{tongLuong},
            tong_luong_thuc_nhan = #{tongLuongThucNhan}
        WHERE ma_nhan_vien = #{maNhanVien}
    </update>

    <resultMap id="resultMapBangLuong" type="BangLuong">
        <result property="maBangLuong" column="ma_bang_luong"/>
        <result property="maNhanVien" column="ma_nhan_vien"/>
        <result property="tenNhanVien" column="ho_ten"/>
        <result property="tongPhuCap" column="tong_phu_cap"/>
        <result property="tongKhauTru" column="tong_khau_tru"/>
        <result property="tongLuong" column="tong_luong"/>
        <result property="tongLuongThucNhan" column="tong_luong_thuc_nhan"/>
        <result property="thangBangLuong" column="thang"/>
        <result property="namBangLuong" column="nam"/>
    </resultMap>

    <select id="getAllBangLuong" resultMap="resultMapBangLuong">
        SELECT ma_bang_luong,
               bl.ma_nhan_vien,
               nv.ho_ten,
               tong_phu_cap,
               tong_khau_tru,
               tong_luong,
               tong_luong_thuc_nhan,
               thang,
               nam
        FROM bang_luong bl
                 JOIN nhan_vien nv ON bl.ma_nhan_vien = nv.ma_nhan_vien
        ORDER BY nam, thang DESC, ma_nhan_vien ASC
    </select>

    <select id="getBangLuongNhanVienByMonth" resultMap="resultMapBangLuong">
        SELECT
            ma_bang_luong,
            bang_luong.ma_nhan_vien,
            nhan_vien.ho_ten,
            tong_phu_cap,
            tong_khau_tru,
            tong_luong,
            tong_luong_thuc_nhan,
            thang,
            nam
        FROM
            bang_luong
        JOIN
            nhan_vien ON bang_luong.ma_nhan_vien = nhan_vien.ma_nhan_vien
        WHERE
            bang_luong.ma_nhan_vien = #{maNhanVien}
        AND
            thang = #{thang}
        AND
            nam = #{nam}
    </select>

    <select id="getBangLuongNhanVien" resultMap="resultMapBangLuong">
        select ma_bang_luong,
               bang_luong.ma_nhan_vien,
               nhan_vien.ho_ten,
               tong_phu_cap,
               tong_khau_tru,
               tong_luong,
               tong_luong_thuc_nhan,
               thang,
               nam
        from bang_luong
                 JOIN nhan_vien on bang_luong.ma_nhan_vien = nhan_vien.ma_nhan_vien
        where bang_luong.ma_nhan_vien = #{maNhanVien}
    </select>

    <resultMap id="resultMapThongKeMucLuongTheoSoLuongNhanVien" type="BangLuong">
        <result property="mucLuong" column="muc_luong"/>
        <result property="soNhanVien" column="so_nhan_vien"/>
    </resultMap>

    <select id="getMucLuongTheoSoLuongNhanVien" resultMap="resultMapThongKeMucLuongTheoSoLuongNhanVien">
        WITH CTE_Luong AS (
            SELECT
                CASE
                    WHEN tong_luong &lt; 10000000 THEN '&lt;10'
                    WHEN tong_luong BETWEEN 10000000 AND 20000000 THEN '10-20'
                    WHEN tong_luong BETWEEN 20000000 AND 30000000 THEN '20-30'
                    ELSE '&gt;30'
                    END AS muc_luong,
                ma_nhan_vien
            FROM
                bang_luong
        ),
             MucLuong AS (
                 SELECT '&lt;10' AS muc_luong
                 UNION ALL
                 SELECT '10-20'
                 UNION ALL
                 SELECT '20-30'
                 UNION ALL
                 SELECT '&gt;30'
             )
        SELECT
            ML.muc_luong,
            COALESCE(COUNT(CL.ma_nhan_vien), 0) AS so_nhan_vien
        FROM
            MucLuong ML
                LEFT JOIN
            CTE_Luong CL
            ON
                ML.muc_luong = CL.muc_luong
        GROUP BY
            ML.muc_luong
        ORDER BY
            CASE
                WHEN ML.muc_luong = '&lt;10' THEN 1
                WHEN ML.muc_luong = '10-20' THEN 2
                WHEN ML.muc_luong = '20-30' THEN 3
                ELSE 4
                END
    </select>

    <resultMap id="resultMapTongLuongNhanVienTheoThang" type="BangLuong">
        <result column="thang_nam" property="thangNam"/>
        <result column="tong_luong_thuc_nhan" property="tongLuongThucNhan"/>
    </resultMap>

    <select id="getTongLuongNhanVienTheoThang" resultMap="resultMapTongLuongNhanVienTheoThang">
        SELECT
            to_char(make_date(nam, thang, 1), 'YYYY-MM') AS thang_nam,
            SUM(tong_luong_thuc_nhan) AS tong_luong_thuc_nhan
        FROM
            bang_luong
        WHERE ma_nhan_vien = #{maNhanVien}
        GROUP BY
            nam, thang
        ORDER BY
            nam, thang
    </select>

    <select id="isBangLuongExist">
        SELECT EXISTS(
            SELECT 1
            FROM bang_luong
            WHERE ma_nhan_vien = #{maNhanVien}
            AND thang = #{thang}
            AND nam = #{nam}
        )
    </select>

    <select id="isTinhLuong">
        SELECT EXISTS(
            SELECT 1
            FROM bang_luong
            WHERE ma_nhan_vien = #{maNhanVien}
              AND thang = #{thang}
              AND nam = #{nam}
              AND tong_luong_thuc_nhan IS NOT NULL
        )
    </select>
</mapper>